rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the creator of a document
    function isCreator(resource) {
      return resource.data.createdBy.uid == request.auth.uid;
    }

    // Game Nights collection rules
    match /gameNights/{gameNightId} {
      // Allow reading if user is authenticated
      allow read: if isAuthenticated();
      
      // Allow creation if user is authenticated and sets themselves as creator
      allow create: if isAuthenticated() 
        && request.resource.data.createdBy.uid == request.auth.uid
        && request.resource.data.createdAt == request.time;
      
      // Allow updates if user is authenticated
      // This allows any authenticated user to update for features like RSVPs and game suggestions
      allow update: if isAuthenticated();
      
      // Only allow deletion by the creator
      allow delete: if isAuthenticated() && isCreator(resource);
    }

    // Games collection rules
    match /games/{gameId} {
      // Allow reading by any authenticated user
      allow read: if isAuthenticated();
      
      // Allow creation if user is authenticated and sets themselves as creator
      allow create: if isAuthenticated() 
        && request.resource.data.createdBy.uid == request.auth.uid
        && request.resource.data.createdAt == request.time
        && request.resource.data.ownedBy.hasOnly([request.auth.uid]);
      
      // Allow updates if user is authenticated and:
      // 1. They're the creator, OR
      // 2. They're only modifying the ownedBy array to add/remove themselves
      allow update: if isAuthenticated() && (
        isCreator(resource) || (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['ownedBy']) &&
          (
            // Adding themselves to ownedBy
            (request.resource.data.ownedBy.size() == resource.data.ownedBy.size() + 1 &&
             request.resource.data.ownedBy.hasAll(resource.data.ownedBy) &&
             request.resource.data.ownedBy.hasOnly(resource.data.ownedBy.concat([request.auth.uid]))) ||
            // Removing themselves from ownedBy
            (resource.data.ownedBy.hasAll([request.auth.uid]) &&
             request.resource.data.ownedBy.size() == resource.data.ownedBy.size() - 1 &&
             resource.data.ownedBy.hasAll(request.resource.data.ownedBy))
          )
        )
      );
      
      // Only allow deletion by the creator
      allow delete: if isAuthenticated() && isCreator(resource);
    }
  }
} 